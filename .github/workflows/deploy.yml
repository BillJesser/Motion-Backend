name: Deploy Backend

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ${{ vars.AWS_REGION || 'us-east-2' }}
  STACK_NAME: ${{ vars.STACK_NAME || 'MotionBackendStack' }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Debug context
        run: |
          echo "repo=${{ github.repository }}"
          echo "ref=${{ github.ref }}"
          echo "event=${{ github.event_name }}"
          echo "sha=${{ github.sha }}"
          echo "actor=${{ github.actor }}"
          echo "workflow=${{ github.workflow }}"
          echo "AWS_REGION=${{ env.AWS_REGION }}"
          echo "STACK_NAME=${{ env.STACK_NAME }}"
          echo "Has AWS_DEPLOY_ROLE_ARN secret: ${{ secrets.AWS_DEPLOY_ROLE_ARN != '' }}"
          echo "Has JWT_SECRET secret: ${{ secrets.JWT_SECRET != '' }}"
          echo "Has GEMINI_API_KEY secret: ${{ secrets.GEMINI_API_KEY != '' }}"

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            echo "Using npm ci (lockfile present)";
            npm ci;
          else
            echo "No lockfile found; running npm install";
            npm install --no-audit --no-fund;
          fi

      - name: CDK Bootstrap (idempotent)
        run: npx cdk bootstrap

      - name: Deploy CDK Stack
        run: npx cdk deploy --require-approval never
        env:
          JWT_SECRET: ${{ env.JWT_SECRET }}
          STACK_NAME: ${{ env.STACK_NAME }}
          AWS_REGION: ${{ env.AWS_REGION }}
          GEMINI_API_KEY: ${{ env.GEMINI_API_KEY }}
